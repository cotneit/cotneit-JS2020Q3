(()=>{"use strict";function e(e){return e<10?"0"+e:""+e}class t{constructor(){this.intervals=[]}update(){this.intervals[this.intervals.length-1]+=1e3,this.updateElement()}start(){this.active=!0,this.intervals.push(0),this.interval=setInterval((()=>{this.update()}),1e3)}pause(){this.active&&(clearInterval(this.interval),this.active=!1)}reset(){this.pause(),this.intervals.length=0,this.updateElement()}getTime(){const t=e(this.getHours()),s=e(this.getMinutes()),i=e(this.getSeconds());return"00"===t?`${s}:${i}`:`${t}:${s}:${i}`}getMilliseconds(){return this.intervals.reduce(((e,t)=>e+t),0)%1e3}getSeconds(){const e=this.intervals.reduce(((e,t)=>e+t),0);return Math.floor(e%6e4/1e3)}getMinutes(){const e=this.intervals.reduce(((e,t)=>e+t),0);return Math.floor(e%36e5/6e4)}getHours(){const e=this.intervals.reduce(((e,t)=>e+t),0);return Math.floor(e/36e5)}createElement(e){return this.DOMElement=document.createElement(e),this.updateElement(),this.DOMElement}updateElement(){this.DOMElement&&(this.DOMElement.textContent=this.getTime())}}document.documentElement.classList.add("page"),document.body.classList.add("page__inner");const s=(new class{constructor(){this.timer=new t,this.state={size:4,tiles:[],moves:0,isSolved:!1},this.stateProxy=new Proxy(this.state,{set:(e,t,s,i)=>("moves"===t&&(this.elements.moveCounter.textContent="Moves: "+s),"size"===t?(Reflect.set(e,t,s,i),this.startNewGame(),!0):Reflect.set(e,t,s,i))}),this.eventListeners={tileOnclick:e=>{const{tiles:t,size:s}=this.state,i=t.map((e=>e.element)).indexOf(e.target);if(!this.state.isSolved){switch(this.timer.active||this.timer.start(),!0){case t[i-1]&&-1===t[i-1].id&&i%s!=0:[t[i],t[i-1]]=[t[i-1],t[i]],this.stateProxy.moves+=1;break;case t[i+1]&&-1===t[i+1].id&&i%s!=s-1:[t[i],t[i+1]]=[t[i+1],t[i]],this.stateProxy.moves+=1;break;case t[i-s]&&-1===t[i-s].id:[t[i],t[i-s]]=[t[i-s],t[i]],this.stateProxy.moves+=1;break;case t[i+s]&&-1===t[i+s].id:[t[i],t[i+s]]=[t[i+s],t[i]],this.stateProxy.moves+=1}this.renderTiles(),this.checkState()}}}}init(){return this.createElements(),this.generateTiles(),this.startNewGame(),this.elements.container}startNewGame(){this.state.isSolved=!1,this.stateProxy.moves=0,this.timer.reset(),this.shuffleTiles(),this.renderTiles(),this.elements.board.style.gridTemplateColumns=`repeat(${this.state.size}, 1fr)`}generateTiles(){const e=this.state.size**2,t=[],s={id:-1,element:document.createElement("div")};for(let s=0;s<e-1;s+=1){const e={};e.id=s+1,e.element=document.createElement("div"),e.element.classList.add("gem-puzzle__tile"),e.element.textContent=e.id,t.push(e),e.element.addEventListener("click",this.eventListeners.tileOnclick)}t.push(s),this.state.tiles=t}renderTiles(){const{tiles:e}=this.state;e.forEach((e=>{this.elements.board.append(e.element)}))}checkState(){const e=this.state.tiles.map((e=>e.id));for(let t=0;t+2<e.length;t+=1)if(e[t+1]!==e[t]+1)return;this.timer.pause(),this.state.isSolved=!0,setTimeout((()=>{alert(`You solved the puzzle in ${this.timer.getTime()} and made ${this.state.moves} moves.\nSorry for the alert, work in progress.`)}),0)}shuffleTiles(){const e=this.state.size**2,{tiles:t}=this.state;for(let s=0;s<e;s+=1){const i=Math.floor(Math.random()*e);[t[s],t[i]]=[t[i],t[s]]}this.isSolvable()||this.shuffleTiles()}isSolvable(){const{tiles:e,size:t}=this.state,s=e.map((e=>e.id)),i=s.indexOf(-1),n=Math.ceil((i+1)/t);let a=0;for(let e=0;e<s.length;e+=1)if(-1!==s[e])for(let t=e;t<s.length;t+=1)s[e]>s[t]&&-1!==s[t]&&(a+=1);if(t%2==1&&a%2==0)return!0;if(t%2==0){if(n%2==1&&a%2==1)return!0;if(n%2==0&&a%2==0)return!0}return!1}createElements(){const e=document.createElement("div"),t=document.createElement("div"),s=document.createElement("div"),i=document.createElement("span"),n=document.createElement("span"),a=document.createElement("button");e.classList.add("gem-puzzle"),t.classList.add("gem-puzzle__status-bar"),s.classList.add("gem-puzzle__board"),s.style.gridTemplateColumns=`repeat(${this.state.size}, 1fr)`,i.textContent="Timer: ",i.append(this.timer.createElement("time")),n.textContent="Moves: 0",a.type="button",a.classList.add("gem-puzzle__button"),a.textContent="New game",a.addEventListener("click",(()=>{this.startNewGame()})),t.append(i,a,n),e.append(t,s),this.elements={container:e,statusBar:t,board:s,timer:i,moveCounter:n}}}).init();document.body.append(s)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,